define("local_requestlogger/formlogger",[],(function(){return{init:function(){let fieldsetData={};function logFormData(form){if(!form||form.dataset.loggedOnce)return;form.dataset.loggedOnce=(new Date).getTime(),setTimeout((()=>delete form.dataset.loggedOnce),1e3),function(form){form.querySelectorAll("fieldset input, fieldset select, fieldset textarea").forEach((element=>{element.hasAttribute("data-listener-attached")||(element.addEventListener("input",(function(){element.name&&(fieldsetData[element.name]=element.value)})),element.setAttribute("data-listener-attached","true"))}))}(form);let formData=new FormData(form);for(let key in fieldsetData)fieldsetData.hasOwnProperty(key)&&!formData.has(key)&&formData.append(key,fieldsetData[key]);formData.append("submitted_at",(new Date).toISOString());let url=M.cfg.wwwroot+"/local/requestlogger/log.php";if(navigator.sendBeacon){let blob=new Blob([new URLSearchParams(formData)],{type:"application/x-www-form-urlencoded"});navigator.sendBeacon(url,blob)}else fetch(url,{method:"POST",body:formData,credentials:"same-origin"})}document.addEventListener("submit",(function(event){let form=event.target;form.method&&"post"===form.method.toLowerCase()&&logFormData(form)}),!0),new MutationObserver((mutations=>{mutations.forEach((mutation=>{mutation.addedNodes.forEach((node=>{if(1===node.nodeType)if("FORM"===node.tagName)logFormData(node);else{var _node$querySelectorAl;((null===(_node$querySelectorAl=node.querySelectorAll)||void 0===_node$querySelectorAl?void 0:_node$querySelectorAl.call(node,"form"))||[]).forEach((form=>logFormData(form)))}}))}))})).observe(document.body,{childList:!0,subtree:!0}),document.querySelectorAll("form").forEach((form=>logFormData(form)))}}}));

//# sourceMappingURL=formlogger.min.js.map